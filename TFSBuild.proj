<?xml version="1.0" encoding="utf-8"?>
<!-- DO NOT EDIT the project element - the ToolsVersion specified here does not prevent the solutions
     and projects in the SolutionToBuild item group from targeting other versions of the .NET framework.
     -->
<Project DefaultTargets="DesktopBuild" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="3.5">

  <!-- Do not edit this -->
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\TeamBuild\Microsoft.TeamFoundation.Build.targets" />
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v10.0\BuildExtensions\Microsoft.TeamFoundation.Build.Extensions.Ant.targets" />

  <ProjectExtensions>

    <!-- Team Foundation Build Version - DO NOT CHANGE -->
    <ProjectFileVersion>2</ProjectFileVersion>

    <!--  DESCRIPTION
     This property is included only for backwards compatibility. The description of a build definition
     is now stored in the database. For compatibility with V1 clients, keep this property in sync with
     the value in the database.
    -->
    <Description></Description>

    <!--  BUILD MACHINE
     This property is included only for backwards compatibility. The default machine used for a build
     definition is now stored in the database, as the MachineName property of the definition's
     DefaultBuildAgent. For compatibility with V1 clients, keep this property in sync with the value
     in the database.
    -->
    <BuildMachine>main1</BuildMachine>

  </ProjectExtensions>

  <PropertyGroup>

    <!--  TEAM PROJECT
     This property is included only for backwards compatibility. The team project for a build
     definition is now stored in the database. For compatibility with V1 clients, keep this property in
     sync with the value in the database.
    -->
    <TeamProject>GS-Space Evaders</TeamProject>

	<!-- Set this property to true for Git build. -->
	<IsGitBuild>true</IsGitBuild>
	
    <!--  BUILD DIRECTORY
     This property is included only for backwards compatibility. The build directory used for a build
     definition is now stored in the database, as the BuildDirectory property of the definition's
     DefaultBuildAgent. For compatibility with V1 clients, keep this property in sync with the value
     in the database.
    -->
    <BuildDirectoryPath>UNKNOWN</BuildDirectoryPath>

    <!--  DROP LOCATION
     This property is included only for backwards compatibility. The drop location used for a build
     definition is now stored in the database. For compatibility with V1 clients, keep this property
     in sync with the value in the database.
    -->
    <DropLocation>#/</DropLocation>

    <!-- Work Item Properties.

         By default, Team Build will automatically create a work item on build failure.  The following
         properties control that behavior. -->

    <!-- Set this property to true to skip creation of work items on build failure -->
    <SkipWorkItemCreation>true</SkipWorkItemCreation>
	
	<!-- Set this property to true to skip label the sources -->
	<SkipLabel>true</SkipLabel>
	
	<!-- Set this property to true to skip get changeset and update workitems -->
	<SkipGetChangesetsAndUpdateWorkItems>true</SkipGetChangesetsAndUpdateWorkItems>

    <!--  WorkItemType
     The type of the work item created on a build failure.
     -->
    <WorkItemType>Bug</WorkItemType>

    <!--  WorkItemFieldValues
     Fields and values of the work item created on a build failure.

     Note: Use reference names for fields if you want the build to be resistant to field name
     changes. Reference names are language independent while friendly names are changed depending
     on the installed language. For example, "System.Reason" is the reference name for the "Reason"
     field.
     -->
    <WorkItemFieldValues>System.Reason=Build Failure;System.Description=Start the build using Team Build</WorkItemFieldValues>

    <!--  WorkItemTitle
     Title of the work item created on build failure.
     -->
    <WorkItemTitle>Build failure in build:</WorkItemTitle>

    <!--  DescriptionText
     History comment of the work item created on a build failure.
     -->
    <DescriptionText>This work item was created by Team Build on a build failure.</DescriptionText>

    <!--  BuildLogText
     Additional comment text for the work item created on a build failure.
     -->
    <BuildlogText>The build log file is at:</BuildlogText>

    <!--  ErrorWarningLogText
     Additional comment text for the work item created on a build failure.
     This text will only be added if there were errors or warnings.
     -->
    <ErrorWarningLogText>The errors/warnings log file is at:</ErrorWarningLogText>

    <!--  UpdateAssociatedWorkItems
     Set this flag to enable/disable updating associated workitems on a successful build.
     -->
    <UpdateAssociatedWorkItems>false</UpdateAssociatedWorkItems>

           
    
  </PropertyGroup>

  <!-- This target is called at the very begining of the build process to log
   the build extensions version -->
  <Target Name="BeforeInitializeWorkspace">
    <VerifyBuildExtensionsVersion  TeamProjectCollectionUrl="$(TeamFoundationServerUrl)" RequiredVersion="12.0.21121.0" />
  </Target>

  <ItemGroup>
    <!--  Ant Call Configuration.
          The build file called should be included into all Git repository branches building with the build definition.
    -->
    <AntBuildFile Include="#COMPILEFILE#">
      <Targets></Targets>
      <Properties>BinariesRoot=$(BinariesRoot);BuildDefinitionName=$(BuildDefinitionName);BuildDefinitionUri=$(BuildDefinitionUri);BuildDirectory=$(BuildDirectory);BuildNumber=$(BuildNumber);DropLocation=$(DropLocation);LogLocation=$(LogLocation);SourceGetVersion=$(SourceGetVersion);TestResultsRoot=$(TestResultsRoot);TeamProject=$(TeamProject);WorkspaceName=$(WorkspaceName);WorkspaceOwner=$(WorkspaceOwner)</Properties>
      <Lib></Lib>
    </AntBuildFile>

    <!-- JUnit XML Results files should be created using the XML formatter
         and be located in the following path
    -->
    <JUnitLogFiles Include="$(BinariesRoot)\**\TEST-*.xml" />
  </ItemGroup>

</Project>




